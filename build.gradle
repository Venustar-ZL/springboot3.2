buildscript {

    String cmd = 'git config core.hooksPath githooks'
    cmd.execute().text.trim()

    ext {
        springCloudVersion = "2023.0.0"
    }
}

plugins {
    id 'checkstyle'
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

apply from: 'version.gradle'

allprojects {

    apply plugin: 'checkstyle'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'com.zl.learn'
    version '1.0-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
        mavenLocal()
        mavenCentral()
    }

    dependencyManagement {
        dependencies {
            for (depJar in rootProject.ext.dependencies) {
                dependency depJar.value
            }
        }
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    checkstyle {
        maxWarnings = 0
        toolVersion = "10.0"
    }

}

subprojects {

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

        // springboot
        implementation("org.springframework.boot:spring-boot-starter-web")
        implementation("org.springframework.boot:spring-boot-starter-aop")
        implementation("org.springframework.boot:spring-boot-starter-validation")
        implementation("org.springframework.boot:spring-boot-starter-actuator")
        implementation('org.springframework.boot:spring-boot-starter-websocket')

        //fastjson2
        implementation("com.alibaba.fastjson2:fastjson2")

        // openfeign
        implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
    }

    test {
        useJUnitPlatform()
    }
}

